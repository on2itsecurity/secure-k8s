apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    kubernetes.io/metadata.name: logging
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
  name: logging
spec: {}
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: 2.0.11
    helm.sh/chart: fluent-bit-0.27.0
  name: fluent-bit
  namespace: logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: 2.0.11
    helm.sh/chart: fluent-bit-0.27.0
  name: fluent-bit
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  - nodes/proxy
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: 2.0.11
    helm.sh/chart: fluent-bit-0.27.0
  name: fluent-bit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit
subjects:
- kind: ServiceAccount
  name: fluent-bit
  namespace: logging
---
apiVersion: v1
data:
  custom_parsers.conf: |
    [PARSER]
      Name           audit
      Format         json
      Time_Key       requestReceivedTimestamp
      Time_Format    %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
      # http://rubular.com/r/tjUt3Awgg4
      Name           cri
      Format         regex
      Regex          ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<msg>.*)$
      Time_Key       time
      Time_Format    %Y-%m-%dT%H:%M:%S.%L%z
      Time_Keep      On
  fluent-bit.conf: |
    # http_server: Needed for startup/live/ready checks
    [SERVICE]
      Flush         5
      Daemon        Off
      http_listen   ${LISTEN}
      Log_Level     warn
      Parsers_File  custom_parsers.conf
      http_server   On

    [INPUT]
      Name             kmsg
      Tag              kernel.${KUBELET_NAME}

    [INPUT]
      Name             tcp
      Listen           ${LISTEN}
      Port             12345
      Format           json
      Tag              talos.${KUBELET_NAME}

    [INPUT]
      Name             tail
      Alias            kubernetes
      Path             /var/log/containers/*.log
      Parser           cri
      Mem_Buf_Limit    10MB
      Skip_Long_Lines  On
      Tag              kubernetes.*
      Skip_Empty_Lines On
      DB               /var/log/fluentbit-kubernetes.db

    [INPUT]
      Name             tail
      Alias            audit
      Path             /var/log/audit/kube/*.log
      Parser           audit
      Tag              audit.${KUBELET_NAME}
      Skip_Empty_Lines On
      DB               /var/log/fluentbit-audit.db

    # Use_Kubelet: Faster and does not flood kube-api when having a lot of nodes
    # tls.verify: Kubelet certs are selfsigned by the node
    [FILTER]
      Name                kubernetes
      Alias               kubernetes
      Match               kubernetes.*
      Kube_Tag_Prefix     kubernetes.var.log.containers.
      K8S-Logging.Exclude On
      Use_Kubelet         On
      Kubelet_Host        ${KUBELET_IP}
      tls.verify          Off
      Buffer_Size         0
      Cache_Use_Docker_Id On
      Kube_Meta_Cache_TTL 10m

    [FILTER]
      Name          modify
      Match         kubernetes.*
      Remove        logtag

    [OUTPUT]
      Name                        stackdriver
      Match                       kubernetes.*
      tag_prefix                  kubernetes.var.log.containers.
      Resource                    k8s_container
      workers                     1 # https://github.com/fluent/fluent-bit/issues/5081
      k8s_cluster_name            ${CLUSTERNAME}
      k8s_cluster_location        ${CLUSTERLOCATION}
      google_service_credentials  /etc/cloud_sa/gsa.json

    [OUTPUT]
      Name                        stackdriver
      Match                       talos.*
      tag_prefix                  talos.
      Resource                    k8s_node
      workers                     1 # https://github.com/fluent/fluent-bit/issues/5081
      k8s_cluster_name            ${CLUSTERNAME}
      k8s_cluster_location        ${CLUSTERLOCATION}
      google_service_credentials  /etc/cloud_sa/gsa.json

    [OUTPUT]
      Name                        stackdriver
      Match                       audit.*
      tag_prefix                  audit.
      Resource                    k8s_node
      workers                     1 # https://github.com/fluent/fluent-bit/issues/5081
      k8s_cluster_name            ${CLUSTERNAME}
      k8s_cluster_location        ${CLUSTERLOCATION}
      google_service_credentials  /etc/cloud_sa/gsa.json

    [OUTPUT]
      Name                        stackdriver
      Match                       kernel.*
      tag_prefix                  kernel.
      Resource                    k8s_node
      workers                     1 # https://github.com/fluent/fluent-bit/issues/5081
      k8s_cluster_name            ${CLUSTERNAME}
      k8s_cluster_location        ${CLUSTERLOCATION}
      google_service_credentials  /etc/cloud_sa/gsa.json
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: 2.0.11
    helm.sh/chart: fluent-bit-0.27.0
  name: fluent-bit
  namespace: logging
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /api/v1/metrics/prometheus
    prometheus.io/port: "2020"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: 2.0.11
    helm.sh/chart: fluent-bit-0.27.0
  name: fluent-bit
  namespace: logging
spec:
  ports:
  - name: http
    port: 2020
    protocol: TCP
    targetPort: http
  - name: talos
    port: 12345
    protocol: TCP
    targetPort: talos
  selector:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/name: fluent-bit
  type: ClusterIP
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  creationTimestamp: null
  name: logging
preemptionPolicy: PreemptLowerPriority
value: 1100
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: 2.0.11
    helm.sh/chart: fluent-bit-0.27.0
  name: fluent-bit
  namespace: logging
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: fluent-bit
      app.kubernetes.io/name: fluent-bit
  template:
    metadata:
      annotations:
        checksum/config: b0a59866733d60d171ca3a52f872ab40307baafd50861c7a465836be6a63d65d
        checksum/luascripts: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        fluentbit.io/exclude: "true"
      labels:
        app.kubernetes.io/instance: fluent-bit
        app.kubernetes.io/name: fluent-bit
        k8s-app: fluent-bit-logging
    spec:
      containers:
      - env:
        - name: LISTEN
          value: "0.0.0.0"
        - name: KUBELET_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBELET_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CLUSTERNAME
          valueFrom:
            configMapKeyRef:
              key: cluster.name
              name: clusterconfig
        - name: CLUSTERLOCATION
          valueFrom:
            configMapKeyRef:
              key: cluster.location
              name: clusterconfig
        image: cr.fluentbit.io/fluent/fluent-bit:2.1.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: http
        name: fluent-bit
        ports:
        - containerPort: 2020
          name: http
          protocol: TCP
        - containerPort: 12345
          name: talos
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: http
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - DAC_OVERRIDE
            - SYSLOG
            drop:
            - ALL
          privileged: true
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /
            port: http
          periodSeconds: 1
        volumeMounts:
        - mountPath: /fluent-bit/etc/fluent-bit.conf
          name: config
          subPath: fluent-bit.conf
        - mountPath: /fluent-bit/etc/custom_parsers.conf
          name: config
          subPath: custom_parsers.conf
        - mountPath: /var/log
          name: varlog
        - mountPath: /dev/kmsg
          name: kmsg
          readOnly: true
        - mountPath: /etc/cloud_sa
          name: cloud-sa-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: false
      priorityClassName: logging
      serviceAccountName: fluent-bit
      volumes:
      - configMap:
          name: fluent-bit
        name: config
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /dev/kmsg
        name: kmsg
      - name: cloud-sa-volume
        secret:
          defaultMode: 420
          secretName: fluentbit-sa
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: fluent-bit
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/version: 2.0.11
    helm.sh/chart: fluent-bit-0.27.0
  name: fluent-bit-controlplane
  namespace: logging
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: fluent-bit
      app.kubernetes.io/name: fluent-bit
  template:
    metadata:
      annotations:
        checksum/config: b0a59866733d60d171ca3a52f872ab40307baafd50861c7a465836be6a63d65d
        checksum/luascripts: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        fluentbit.io/exclude: "true"
      labels:
        app.kubernetes.io/instance: fluent-bit
        app.kubernetes.io/name: fluent-bit
        k8s-app: fluent-bit-logging
    spec:
      containers:
      - env:
        - name: LISTEN
          value: "127.0.0.1"
        - name: KUBELET_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBELET_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CLUSTERNAME
          valueFrom:
            configMapKeyRef:
              key: cluster.name
              name: clusterconfig
        - name: CLUSTERLOCATION
          valueFrom:
            configMapKeyRef:
              key: cluster.location
              name: clusterconfig
        image: cr.fluentbit.io/fluent/fluent-bit:2.1.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /
            port: http
        name: fluent-bit
        ports:
        - containerPort: 2020
          name: http
          protocol: TCP
        - containerPort: 12345
          name: talos
          protocol: TCP
        readinessProbe:
          httpGet:
            host: 127.0.0.1
            path: /api/v1/health
            port: http
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - DAC_OVERRIDE
            - SYSLOG
            drop:
            - ALL
          privileged: true
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 60
          httpGet:
            host: 127.0.0.1
            path: /
            port: http
          periodSeconds: 1
        volumeMounts:
        - mountPath: /fluent-bit/etc/fluent-bit.conf
          name: config
          subPath: fluent-bit.conf
        - mountPath: /fluent-bit/etc/custom_parsers.conf
          name: config
          subPath: custom_parsers.conf
        - mountPath: /var/log
          name: varlog
        - mountPath: /dev/kmsg
          name: kmsg
          readOnly: true
        - mountPath: /etc/cloud_sa
          name: cloud-sa-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      priorityClassName: logging
      serviceAccountName: fluent-bit
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - configMap:
          name: fluent-bit
        name: config
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /dev/kmsg
        name: kmsg
      - name: cloud-sa-volume
        secret:
          defaultMode: 420
          secretName: fluentbit-sa
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: ingress
  namespace: logging
spec:
  endpointSelector: {}
  ingress:
  - fromEndpoints:
    - matchLabels:
        io.kubernetes.pod.namespace.labels.kubernetes.io/metadata.name: monitoring
    toPorts:
    - ports:
      - port: "2020"
  - fromEntities:
    - host
    toPorts:
    - ports:
      - port: "12345"
  - fromEntities:
    - health
    toPorts:
    - ports:
      - port: "2020"
